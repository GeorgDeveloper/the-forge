package ru.georgdeveloper.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProtectiveEquipmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProtectiveEquipmentAllPropertiesEquals(ProtectiveEquipment expected, ProtectiveEquipment actual) {
        assertProtectiveEquipmentAutoGeneratedPropertiesEquals(expected, actual);
        assertProtectiveEquipmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProtectiveEquipmentAllUpdatablePropertiesEquals(ProtectiveEquipment expected, ProtectiveEquipment actual) {
        assertProtectiveEquipmentUpdatableFieldsEquals(expected, actual);
        assertProtectiveEquipmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProtectiveEquipmentAutoGeneratedPropertiesEquals(ProtectiveEquipment expected, ProtectiveEquipment actual) {
        assertThat(actual)
            .as("Verify ProtectiveEquipment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProtectiveEquipmentUpdatableFieldsEquals(ProtectiveEquipment expected, ProtectiveEquipment actual) {
        assertThat(actual)
            .as("Verify ProtectiveEquipment relevant properties")
            .satisfies(a -> assertThat(a.getEquipmentName()).as("check equipmentName").isEqualTo(expected.getEquipmentName()))
            .satisfies(a -> assertThat(a.getQuantity()).as("check quantity").isEqualTo(expected.getQuantity()))
            .satisfies(a -> assertThat(a.getIssuanceFrequency()).as("check issuanceFrequency").isEqualTo(expected.getIssuanceFrequency()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProtectiveEquipmentUpdatableRelationshipsEquals(ProtectiveEquipment expected, ProtectiveEquipment actual) {
        assertThat(actual)
            .as("Verify ProtectiveEquipment relationships")
            .satisfies(a -> assertThat(a.getProfession()).as("check profession").isEqualTo(expected.getProfession()));
    }
}
